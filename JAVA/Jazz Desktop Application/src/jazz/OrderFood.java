/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jazz;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Iterator;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DEll
 */
public class OrderFood extends javax.swing.JFrame {

    int index = -1;
    String ID="";
    String foodName="";
    int bill=-1;
    int quan=-1;
    /**
     * Creates new form OrderFood
     */
    public OrderFood() {
        initComponents();
        tableSet();
    }
    
    public OrderFood(int index) {
        initComponents();
        tableSet();
        this.index = index;
    }
    
    public void addDatatoRow(int ind)
    {
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Object rowData[] = new Object[5];
        model.setRowCount(0);
        if(ind==1)
        {
            System.out.println(JazzWorld.worldInstance().getOrder().kfc.size());
            for(int i =0;i<JazzWorld.worldInstance().getOrder().kfc.size();i++)
            {
                KFC k = JazzWorld.worldInstance().getOrder().kfc.get(i);
                rowData[0]=k.getID();
                rowData[1]=k.getName();
                rowData[2]=k.getDeal();
                rowData[3]=k.getPersons();
                rowData[4]=k.getPrice();
                model.addRow(rowData);
            }
            
        }
        else if(ind==2)
        {
            System.out.println(JazzWorld.worldInstance().getOrder().mc.size());
            ListIterator<McDonalds> iter = JazzWorld.worldInstance().getOrder().mc.listIterator();
            while(iter.hasNext())
            {
                McDonalds k = iter.next();
                rowData[0]=k.getID();
                rowData[1]=k.getName();
                rowData[2]=k.getDeal();
                rowData[3]=k.getPersons();
                rowData[4]=k.getPrice();
                model.addRow(rowData);
            }
        }
        else if(ind==3)
        {
            System.out.println(JazzWorld.worldInstance().getOrder().hardeez.size());
            Iterator<Hardeez> iter = JazzWorld.worldInstance().getOrder().hardeez.iterator();
            while(iter.hasNext())
            {
                Hardeez k = iter.next();
                rowData[0]=k.getID();
                rowData[1]=k.getName();
                rowData[2]=k.getDeal();
                rowData[3]=k.getPersons();
                rowData[4]=k.getPrice();
                model.addRow(rowData);
            }
        }
    }
    
    public void tableSet()
    {
        jScrollPane1.setBackground(new Color(0,0,0,0));
        jScrollPane1.setOpaque(false);
        jTable1.setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
    }
    
    public void WriteData()
    {
        try
        { 
            FileWriter fr = new FileWriter("Orders.txt",true);
            BufferedWriter br = new BufferedWriter(fr);
            br.write(RegisteredAccounts.getUsersInstance().getUsers().get(index).getUsername()+","+RegisteredAccounts.getUsersInstance().getUsers().get(index).getContact()+","+this.ID+","+this.foodName+","+this.bill+","+this.quan+"\n");   
            br.flush();
            br.close();
            fr.close();
        }
        catch(Exception ex)
        {
            System.out.println("Exception");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        kfcButton = new javax.swing.JButton();
        mcButton = new javax.swing.JButton();
        hardeezButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        quantityBox = new javax.swing.JComboBox<>();
        orderButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order Food");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jazz/jazzbgd.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 72)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(251, 255, 0));
        jLabel2.setText("Management System");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("ORDER FOOD");

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jTable1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 204, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Deal", "Person", "Price"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(251, 255, 0));
        jLabel4.setText("Restaurants");

        kfcButton.setBackground(new java.awt.Color(0, 0, 0));
        kfcButton.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        kfcButton.setForeground(new java.awt.Color(204, 0, 0));
        kfcButton.setText("KFC");
        kfcButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(251, 255, 0), 3));
        kfcButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kfcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kfcButtonActionPerformed(evt);
            }
        });

        mcButton.setBackground(new java.awt.Color(0, 0, 0));
        mcButton.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        mcButton.setForeground(new java.awt.Color(204, 0, 0));
        mcButton.setText("Mc Donald's");
        mcButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(251, 255, 0), 3));
        mcButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcButtonActionPerformed(evt);
            }
        });

        hardeezButton.setBackground(new java.awt.Color(0, 0, 0));
        hardeezButton.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        hardeezButton.setForeground(new java.awt.Color(204, 0, 0));
        hardeezButton.setText("Hardeez");
        hardeezButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(251, 255, 0), 3));
        hardeezButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hardeezButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardeezButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kfcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hardeezButton, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addComponent(kfcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hardeezButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(251, 255, 0));
        jLabel5.setText("Food ID :");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(251, 255, 0));
        jLabel6.setText("Quantity :");

        idText.setBackground(new java.awt.Color(0, 0, 0));
        idText.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        idText.setForeground(new java.awt.Color(255, 255, 255));
        idText.setToolTipText("");
        idText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2));

        quantityBox.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        quantityBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));
        quantityBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 2, true));

        orderButton.setBackground(new java.awt.Color(0, 0, 204));
        orderButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        orderButton.setForeground(new java.awt.Color(255, 255, 255));
        orderButton.setText("Order");
        orderButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(251, 255, 0), 3));
        orderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(204, 0, 0));
        cancelButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(251, 255, 0), 3));
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 49, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(79, 79, 79)
                                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(quantityBox, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        WorldCustomerMenu menu = new WorldCustomerMenu(index);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        // TODO add your handling code here:
//        WorldCustomerMenu menu = new WorldCustomerMenu(index);
//        menu.setVisible(true);
//        this.dispose();
        String id= idText.getText();
        int quantity = Integer.parseInt(quantityBox.getSelectedItem().toString());
        this.quan=quantity;
        if(id.equals("") || id.equals(null))
            JOptionPane.showMessageDialog(this,"You textbox is empty","Empty ID",JOptionPane.ERROR_MESSAGE);
        else
        {
            boolean flag=false;
            if(id.charAt(0)=='K')
            {
                for(int i =0;i<JazzWorld.worldInstance().getOrder().kfc.size();i++)
                {
                    KFC k = JazzWorld.worldInstance().getOrder().kfc.get(i);
                    if(k.getID().equals(id))
                    {
                        this.ID=k.getID();
                        this.foodName=k.getName();
                        int price=k.getPrice();
                        price=price*quantity;
                        if(JazzCash.cashInstance().getCredit().get(index).isMoneyAvaialbe(price))
                        {
                            DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                            LocalDateTime now = LocalDateTime.now();
                            String a=now.format(format);
                            JazzCash.cashInstance().getCredit().get(index).retrieveAmount(price);
                            this.bill=price;
                            String receipt="*********************************************************************************\n";
                            receipt+="                          Food Receipt\n";
                            receipt="*********************************************************************************\n";
                            receipt+=a+"\n\n";
                            receipt+= RegisteredAccounts.getUsersInstance().getUsers().get(index).getUsername()+"                     "+RegisteredAccounts.getUsersInstance().getUsers().get(index).getContact()+"\n";
                            receipt+="Meal: "+this.foodName+"("+this.ID+")\n";
                            receipt+="Your bill is : "+this.bill+"\n\n\n";
                            receipt+="                  Thank you for your cooperation!\n                  Its been Nice dealing with you :)";
                            JazzCash.cashInstance().writeCreditData();
                            JOptionPane.showMessageDialog(null, receipt);
                            WriteData();
                        }
                        else
                            JOptionPane.showMessageDialog(this,"Your Wallet does contain enough credit","Credit Error",JOptionPane.ERROR_MESSAGE);
                        flag=true;
                        break;        
                    }
                    else
                        flag=false;
                }
                if(flag==false)
                    JOptionPane.showMessageDialog(this,"ID not found","invalid ID",JOptionPane.ERROR_MESSAGE);
            }
            else if(id.charAt(0)=='M')
            {
                ListIterator<McDonalds> iter = JazzWorld.worldInstance().getOrder().mc.listIterator();
                while(iter.hasNext())
                {
                    McDonalds k = iter.next();
                    if(k.getID().equals(id))
                    {
                        this.ID=k.getID();
                        this.foodName=k.getName();
                        int price=k.getPrice();
                        price=price*quantity;
                        if(JazzCash.cashInstance().getCredit().get(index).isMoneyAvaialbe(price))
                        {
                            DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                            LocalDateTime now = LocalDateTime.now();
                            String a=now.format(format);
                            JazzCash.cashInstance().getCredit().get(index).retrieveAmount(price);
                            this.bill=price;
                            String receipt="*********************************************************************************\n";
                            receipt+="                          Food Receipt\n";
                            receipt="*********************************************************************************\n";
                            receipt+=a+"\n\n";
                            receipt+= RegisteredAccounts.getUsersInstance().getUsers().get(index).getUsername()+"                     "+RegisteredAccounts.getUsersInstance().getUsers().get(index).getContact()+"\n";
                            receipt+="Meal: "+this.foodName+"("+this.ID+")\n";
                            receipt+="Your bill is : "+this.bill+"\n\n\n";
                            receipt+="                  Thank you for your cooperation!\n                  Its been Nice dealing with you :)";
                            JOptionPane.showMessageDialog(null, receipt);
                            WriteData();
                        }
                        else
                            JOptionPane.showMessageDialog(this,"Your Wallet does contain enough credit","Credit Error",JOptionPane.ERROR_MESSAGE);
                        flag=true;
                        break;        
                    }
                    else
                        flag=false;
                }
                if(flag==false)
                    JOptionPane.showMessageDialog(this,"ID not found","invalid ID",JOptionPane.ERROR_MESSAGE);
            }
            else if(id.charAt(0)=='H')
            {
                Iterator<Hardeez> iter = JazzWorld.worldInstance().getOrder().hardeez.iterator();
                while(iter.hasNext())
                {
                    Hardeez k = iter.next();
                    if(k.getID().equals(id))
                    {
                        this.ID=k.getID();
                        this.foodName=k.getName();
                        int price=k.getPrice();
                        price=price*quantity;
                        if(JazzCash.cashInstance().getCredit().get(index).isMoneyAvaialbe(price))
                        {
                            DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                            LocalDateTime now = LocalDateTime.now();
                            String a=now.format(format);
                            JazzCash.cashInstance().getCredit().get(index).retrieveAmount(price);
                            this.bill=price;
                            String receipt="*********************************************************************************\n";
                            receipt+="                          Food Receipt\n";
                            receipt="*********************************************************************************\n";
                            receipt+=a+"\n\n";
                            receipt+= RegisteredAccounts.getUsersInstance().getUsers().get(index).getUsername()+"                     "+RegisteredAccounts.getUsersInstance().getUsers().get(index).getContact()+"\n";
                            receipt+="Meal: "+this.foodName+"("+this.ID+")\n";
                            receipt+="Your bill is : "+this.bill+"\n\n\n";
                            receipt+="                  Thank you for your cooperation!\n                  Its been Nice dealing with you :)";
                            JOptionPane.showMessageDialog(null, receipt);
                            WriteData();
                        }
                        else
                            JOptionPane.showMessageDialog(this,"Your Wallet does contain enough credit","Credit Error",JOptionPane.ERROR_MESSAGE);
                        flag=true;
                        break;        
                    }
                    else
                        flag=false;
                    
                }
                if(flag==false)
                    JOptionPane.showMessageDialog(this,"ID not found","invalid ID",JOptionPane.ERROR_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this,"ID not Found","Unrecognized ID",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_orderButtonActionPerformed

    private void kfcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kfcButtonActionPerformed
        // TODO add your handling code here:
        addDatatoRow(1);
    }//GEN-LAST:event_kfcButtonActionPerformed

    private void mcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcButtonActionPerformed
        // TODO add your handling code here:
        addDatatoRow(2);
    }//GEN-LAST:event_mcButtonActionPerformed

    private void hardeezButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardeezButtonActionPerformed
        // TODO add your handling code here:
        addDatatoRow(3);
    }//GEN-LAST:event_hardeezButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderFood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton hardeezButton;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton kfcButton;
    private javax.swing.JButton mcButton;
    private javax.swing.JButton orderButton;
    private javax.swing.JComboBox<String> quantityBox;
    // End of variables declaration//GEN-END:variables
}
